name: FREE FIRE RDP

on:
  workflow_dispatch:
    inputs:
      code:
        description: Paste Chrome Remote Desktop Code
        required: true

jobs:
  build:
    name: Free Fire Ripper Lab Running
    runs-on: windows-latest
    timeout-minutes: 999999

    steps:
    - name: Downloading And Installing Free Fire And Tools
      continue-on-error: true
      run: |
        & { Set-NetFirewallProfile -Profile Domain,Public,Private -Enabled False }

        function Install-PackageWithRetry {
            param (
                [string]$packageName
            )

            $maxRetries = 3
            $retryCount = 0
            $success = $false

            while (-not $success -and $retryCount -lt $maxRetries) {
                try {
                    choco install $packageName -y
                    $success = $true
                } catch {
                    Write-Host "Failed to install $packageName. Retrying... ($($retryCount+1)/$maxRetries)"
                    Start-Sleep -Seconds 10
                    $retryCount++
                }
            }

            if (-not $success) {
                Write-Host "Failed to install $packageName via Chocolatey. Attempting direct download..."
                if ($packageName -eq 'googlechrome') {
                    Invoke-WebRequest -Uri "https://dl.google.com/chrome/install/latest/chrome_installer.exe" -OutFile "chrome_installer.exe"
                    Start-Process "chrome_installer.exe" -ArgumentList "/silent", "/install" -Wait
                } elseif ($packageName -eq 'chrome-remote-desktop-host') {
                    Invoke-WebRequest -Uri "https://dl.google.com/edgedl/chrome-remote-desktop/chromeremotedesktophost.msi" -OutFile "chromeremotedesktophost.msi"
                    Start-Process "msiexec.exe" -ArgumentList "/i", "chromeremotedesktophost.msi", "/quiet", "/qn" -Wait
                }
            }
        }

        Install-PackageWithRetry -packageName "chrome-remote-desktop-host"
        Install-PackageWithRetry -packageName "googlechrome"

        cd C:\Users\$Env:USERNAME\Documents

        Invoke-WebRequest -Uri "https://drive.usercontent.google.com/download?id=11EUFz6hufNT1g56-CmOJw9_KxMERZxhe&export=download&authuser=0&confirm=t&uuid=157ad075-6074-4fb7-ade2-63e76e7956b7&at=APZUnTUkxLXjKC5Aliqg_3gGGgPu%3A1716557813235" -OutFile ffripper.zip

        7z x ffripper.zip -y

        $chromeRemoteDesktopPath = "${Env:PROGRAMFILES(X86)}\Google\Chrome Remote Desktop\CurrentVersion\remoting_start_host.exe"
        if (Test-Path $chromeRemoteDesktopPath) {
            & $chromeRemoteDesktopPath
        } else {
            Write-Host "Chrome Remote Desktop's remoting_start_host.exe not found at $chromeRemoteDesktopPath. Skipping this step."
        }

        $noesisPath = "C:\Users\$Env:USERNAME\Documents\noesis\Noesis64.exe"
        if (Test-Path $noesisPath) {
            Start-Process $noesisPath
        } else {
            Write-Host "Noesis64.exe not found at $noesisPath. Skipping this step."
        }

        $ninjaripperPath = "C:\Users\$Env:USERNAME\Documents\ninjaripper\x86\ninjaripper.exe"
        if (Test-Path $ninjaripperPath) {
            Start-Process $ninjaripperPath
        } else {
            Write-Host "NinjaRipper.exe not found at $ninjaripperPath. Skipping this step."
        }

        New-Item -ItemType SymbolicLink -Target "C:\Users\$Env:USERNAME\Documents\FenixGaga\Engine\ProjectTitan.exe" -Path "C:\Users\$Env:USERNAME\Desktop\Free Fire.lnk"
        New-Item -ItemType SymbolicLink -Target "C:\Users\$Env:USERNAME\Documents\ninjaripper\x86\NinjaRipper.exe" -Path "C:\Users\$Env:USERNAME\Desktop\Ninjaripper.lnk"
        New-Item -ItemType SymbolicLink -Target "C:\Users\$Env:USERNAME\Documents\noesis\Noesis64.exe" -Path "C:\Users\$Env:USERNAME\Desktop\Noesis.lnk"

    - name: Starting Remote Desktop
      continue-on-error: true
      run: |
        ${{ inputs.code }}

    - name: Keep Session Alive
      run: |
        while ($true) {
            Write-Host "Keeping session alive..."
            Start-Sleep -Seconds 60
        }
